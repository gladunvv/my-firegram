{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","useState","autor","phrase","quote","setQuote","useEffect","index","setInterval","quotes","data","length","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","scale","ease","duration","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7791e1c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport quotes from '../data/quotes';\r\n\r\nconst Title = () => {\r\n  const [quote, setQuote] = useState({ autor: '', phrase: '' });\r\n  useEffect(() => {\r\n    let index = 0;\r\n    setInterval(() => {\r\n      if (index === quotes.data.length) {\r\n        index = 0;\r\n      }\r\n      const quote = quotes.data[index];\r\n      setQuote({ autor: quote.autor, phrase: quote.quote });\r\n      index += 1;\r\n    }, 5000 * 5);\r\n  }, []);\r\n  return (\r\n    <div className='title'>\r\n      <h1>Firegram</h1>\r\n      <div className='quote'>\r\n        <p>\"{quote.phrase}\"</p>\r\n        <span>â€” {quote.autor}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyBcD-XLTqvlqC6uqMpVd_wxXIM0iq2N0DQ',\r\n  authDomain: 'ninja-firegram-5046b.firebaseapp.com',\r\n  databaseURL: 'https://ninja-firegram-5046b.firebaseio.com',\r\n  projectId: 'ninja-firegram-5046b',\r\n  storageBucket: 'ninja-firegram-5046b.appspot.com',\r\n  messagingSenderId: '353746793288',\r\n  appId: '1:353746793288:web:743dc687a2a4b7fdab397d',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images');\r\n\r\n    storageRef.put(file).on(\r\n      'state_changed',\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      },\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div\r\n      className='progress-bar'\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please selecte an image file (png or jpeg)');\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type='file' onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className='output'>\r\n        {error && <div className='error'>{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n  return (\r\n    <div className='img-grid'>\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            className='img-wrap'\r\n            key={doc.id}\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt='uploaded img'\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains('backdrop')) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n  return (\r\n    <motion.div\r\n      className='backdrop'\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        src={selectedImg}\r\n        alt='enlarged pic'\r\n        initial={{ scale: 0.5 }}\r\n        animate={{ scale: 1 }}\r\n        transition={{\r\n          ease: 'easeOut',\r\n          duration: 0.4,\r\n        }}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport Title from './comps/Title';\r\nimport UploadForm from './comps/UploadForm';\r\nimport ImageGrid from './comps/ImageGrid';\r\nimport Modal from './comps/Modal';\r\n\r\nfunction App() {\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Title />\r\n      <UploadForm />\r\n      <ImageGrid setSelectedImg={setSelectedImg} />\r\n      {selectedImg && (\r\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}